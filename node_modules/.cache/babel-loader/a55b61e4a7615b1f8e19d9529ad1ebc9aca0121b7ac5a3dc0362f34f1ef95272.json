{"ast":null,"code":"var _jsxFileName = \"/mnt/disk500/yolotest2/src/components/Win98UI/Button.jsx\";\nimport React from 'react';\nimport './styles.css';\n\n/**\n * Windows 98 style button component\n * \n * @param {Object} props - Component props\n * @param {string} props.className - Additional CSS classes\n * @param {boolean} props.disabled - Whether button is disabled\n * @param {boolean} props.active - Whether button is in active/pressed state\n * @param {string} props.type - Button type (button, submit, reset)\n * @param {Function} props.onClick - Click handler function\n * @param {React.ReactNode} props.children - Button content\n * @param {string} props.size - Button size (small, medium, large)\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  className = '',\n  disabled = false,\n  active = false,\n  type = 'button',\n  onClick,\n  children,\n  size = 'medium',\n  ...restProps\n}) => {\n  const buttonClasses = ['win98-button', active ? 'win98-button--active' : '', `win98-button--${size}`, className].filter(Boolean).join(' ');\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: type,\n    className: buttonClasses,\n    disabled: disabled,\n    onClick: onClick,\n    ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Button","className","disabled","active","type","onClick","children","size","restProps","buttonClasses","filter","Boolean","join","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/disk500/yolotest2/src/components/Win98UI/Button.jsx"],"sourcesContent":["import React from 'react';\nimport './styles.css';\n\n/**\n * Windows 98 style button component\n * \n * @param {Object} props - Component props\n * @param {string} props.className - Additional CSS classes\n * @param {boolean} props.disabled - Whether button is disabled\n * @param {boolean} props.active - Whether button is in active/pressed state\n * @param {string} props.type - Button type (button, submit, reset)\n * @param {Function} props.onClick - Click handler function\n * @param {React.ReactNode} props.children - Button content\n * @param {string} props.size - Button size (small, medium, large)\n */\nconst Button = ({\n  className = '',\n  disabled = false,\n  active = false,\n  type = 'button',\n  onClick,\n  children,\n  size = 'medium',\n  ...restProps\n}) => {\n  const buttonClasses = [\n    'win98-button',\n    active ? 'win98-button--active' : '',\n    `win98-button--${size}`,\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <button\n      type={type}\n      className={buttonClasses}\n      disabled={disabled}\n      onClick={onClick}\n      {...restProps}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,SAAAC,MAAA,IAAAC,OAAA;AAYA,MAAMC,MAAM,GAAGA,CAAC;EACdC,SAAS,GAAG,EAAE;EACdC,QAAQ,GAAG,KAAK;EAChBC,MAAM,GAAG,KAAK;EACdC,IAAI,GAAG,QAAQ;EACfC,OAAO;EACPC,QAAQ;EACRC,IAAI,GAAG,QAAQ;EACf,GAAGC;AACL,CAAC,KAAK;EACJ,MAAMC,aAAa,GAAG,CACpB,cAAc,EACdN,MAAM,GAAG,sBAAsB,GAAG,EAAE,EACpC,iBAAiBI,IAAI,EAAE,EACvBN,SAAS,CACV,CAACS,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAE3B,oBACEb,OAAA;IACEK,IAAI,EAAEA,IAAK;IACXH,SAAS,EAAEQ,aAAc;IACzBP,QAAQ,EAAEA,QAAS;IACnBG,OAAO,EAAEA,OAAQ;IAAA,GACbG,SAAS;IAAAF,QAAA,EAEZA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACC,EAAA,GA5BIjB,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}